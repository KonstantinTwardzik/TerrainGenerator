<UserControl x:Class="Topographer3D.Views.MenuBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Topographer3D.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!--Menu Seperator-->
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="{StaticResource LighterBlue}" BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Menu TopLevelItem-->
        <ControlTemplate  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource LighterBlue}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TertiaryColor}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Menu TopLevelHeader-->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"  ContentSource="Header" RecognizesAccessKey="True" />
                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                        <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource SecondaryColor}" BorderBrush="{StaticResource LighterBlue}" BorderThickness="1" >
                            <StackPanel  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource LighterBlue}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                    <Setter TargetName="Border" Property="CornerRadius" Value="2,2,0,0"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,2,2,2"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="2"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TertiaryColor}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Menu SubmenuItem-->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Margin="6,3,3,3" Width="16" Height="16" VerticalAlignment="Center" ContentSource="Icon"/>
                    <Border Name="Check"  Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="{StaticResource TestColor}" BorderThickness="1" BorderBrush="{StaticResource TestColor}">
                        <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False"  Stroke="{StaticResource TestColor}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="10,5,0,5"/>
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" DockPanel.Dock="Right" Margin="10,5,0,5" Foreground="{StaticResource TertiaryColor}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="CornerRadius" Value="1" />
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource LighterBlue}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource TertiaryColor}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Menu SubmenuHeader-->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="5"/>
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" DockPanel.Dock="Right"/>
                    <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource LighterBlue}" />
                    <Popup Name="Popup" Placement="Right" HorizontalOffset="2" VerticalOffset="-3" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                        <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource SecondaryColor}" BorderBrush="{StaticResource LighterBlue}" BorderThickness="1" >
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="CornerRadius" Value="1" />
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource LighterBlue}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,2,2,2"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="2"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource TertiaryColor}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>

    <Menu Grid.Column="0" Grid.Row="0" Width="220" HorizontalAlignment="Left" Background="{StaticResource PrimaryColor}" Foreground="{StaticResource LightestColor}" Margin="3">
        <MenuItem Header="_File">
            <MenuItem Header="_New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N" />
            <MenuItem Header="_Open" InputGestureText="Ctrl+O" IsEnabled="False" />
            <MenuItem Header="_Save" InputGestureText="Ctrl+S" IsEnabled="False"/>
            <Separator/>
            <MenuItem Header="_Export Maps" Command="{Binding ExportCommand}" InputGestureText="Ctrl+E"/>
            <Separator />
            <MenuItem Header="_Quit" Command="{Binding QuitCommand}" InputGestureText="Ctrl+Q"/>
        </MenuItem>
        <MenuItem Header="_Edit" IsEnabled="False">
        </MenuItem>
        <MenuItem Header="_Terrain">
            <MenuItem Header="_Detail Resolution">
                <MenuItem Header="Low Poly Mode" IsEnabled="False">
                    <MenuItem.Icon>
                        <Image Source="../Assets/Icons/FlatShading.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_16" InputGestureText="Ctrl+1" Command="{Binding DetailResolutionCommand}" CommandParameter="16" IsEnabled="{Binding Res16}"/>
                <MenuItem Header="_32" InputGestureText="Ctrl+2" Command="{Binding DetailResolutionCommand}" CommandParameter="32" IsEnabled="{Binding Res32}"/>
                <MenuItem Header="_64" InputGestureText="Ctrl+3" Command="{Binding DetailResolutionCommand}" CommandParameter="64" IsEnabled="{Binding Res64}"/>
                <MenuItem Header="_128" InputGestureText="Ctrl+4" Command="{Binding DetailResolutionCommand}" CommandParameter="128" IsEnabled="{Binding Res128}"/>
                <Separator/>
                <MenuItem Header="High Poly Mode" IsEnabled="False">
                    <MenuItem.Icon>
                        <Image Source="../Assets/Icons/PhongShading.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_512" InputGestureText="Ctrl+5" Command="{Binding DetailResolutionCommand}" CommandParameter="512" IsEnabled="{Binding Res512}"/>
                <MenuItem Header="_1024" InputGestureText="Ctrl+6" Command="{Binding DetailResolutionCommand}" CommandParameter="1024" IsEnabled="{Binding Res1024}"/>
                <MenuItem Header="_2048" InputGestureText="Ctrl+7" Command="{Binding DetailResolutionCommand}" CommandParameter="2048" IsEnabled="{Binding Res2048}"/>
                <MenuItem Header="_4096" InputGestureText="Ctrl+8" Command="{Binding DetailResolutionCommand}" CommandParameter="4096" IsEnabled="{Binding Res4096}"/>
            </MenuItem>
            <MenuItem Header="_Preview Height">
                <MenuItem Header="_25%" InputGestureText="Alt+1" Command="{Binding ChangeHeightCommand}" CommandParameter="25" IsEnabled="{Binding Height25}"/>
                <MenuItem Header="_50%" InputGestureText="Alt+2" Command="{Binding ChangeHeightCommand}" CommandParameter="50" IsEnabled="{Binding Height50}"/>
                <MenuItem Header="_75%" InputGestureText="Alt+3" Command="{Binding ChangeHeightCommand}" CommandParameter="75" IsEnabled="{Binding Height75}"/>
                <MenuItem Header="_100%" InputGestureText="Alt+4" Command="{Binding ChangeHeightCommand}" CommandParameter="100" IsEnabled="{Binding Height100}"/>
                <MenuItem Header="_125%" InputGestureText="Alt+5" Command="{Binding ChangeHeightCommand}" CommandParameter="125" IsEnabled="{Binding Height125}"/>
                <MenuItem Header="_150%" InputGestureText="Alt+6" Command="{Binding ChangeHeightCommand}" CommandParameter="150" IsEnabled="{Binding Height150}"/>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Viewport">
            <MenuItem Header="_Quality Settings">
                <MenuItem Header="_Low" Command="{Binding Viewport.ChangeViewportQualityCommand}" CommandParameter="0" IsEnabled="{Binding Viewport.Low}">
                    <MenuItem.Icon>
                        <Image Source="../Assets/Icons/LowQuality.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Medium" Command="{Binding Viewport.ChangeViewportQualityCommand}" CommandParameter="1" IsEnabled="{Binding Viewport.Medium}">
                    <MenuItem.Icon>
                        <Image Source="../Assets/Icons/MediumQuality.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_High" Command="{Binding Viewport.ChangeViewportQualityCommand}" CommandParameter="2" IsEnabled="{Binding Viewport.High}">
                    <MenuItem.Icon>
                        <Image Source="../Assets/Icons/HighQuality.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Ultra" Command="{Binding Viewport.ChangeViewportQualityCommand}" CommandParameter="3" IsEnabled="{Binding Viewport.Ultra}">
                    <MenuItem.Icon>
                        <Image Source="../Assets/Icons/UltraQuality.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Help" InputGestureText="Ctrl+H" Command="{Binding HelpCommand}"/>
    </Menu>
</UserControl>
